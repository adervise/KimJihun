<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Sample">

	<typeAlias  alias="egovMap"  type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
    <typeAlias  alias="searchVO" type="egovframework.example.sample.service.SampleDefaultVO"/>
    <typeAlias  alias="bVO" type="***.bd.service.vo.BdDefaultVO"/>
    <typeAlias  alias="bpVO" type="***.bd.service.vo.BdPopVO"/>


    <resultMap id="comboMap" class="***.bd.service.vo.BdDefaultVO">
        <result property="ctgryCd" column="CTGRY_CD"/>
        <result property="ctgryNm" column="CTGRY_NM"/>
    </resultMap>

    <resultMap id="viewMap" class="***.bd.service.vo.BdDefaultVO">
        <result property="detailsnId" column="DETAIL_SN_ID"/>
        <result property="snId" column="SN_ID"/>
        <result property="ctgryLclas" column="CTGRY_LCLAS"/>
        <result property="ctgryMlsfc" column="CTGRY_MLSFC"/>
        <result property="ctgrySclas" column="CTGRY_SCLAS"/>
        <result property="ctgryNm" column="CTGRY_NM"/>
        <result property="ctgryDc" column="CTGRY_DC"/>
        <result property="colctTyp" column="COLCT_TYP"/>
        <result property="ldadngLc" column="LDADNG_LC"/>
        <result property="ldadngTy" column="LDADNG_TY"/>
        <result property="ctgryNm" column="CTGRY_NM"/>
        <result property="ctgryFrstInputDt" column="CTGRY_FRST_INPUT_DT"/>
     </resultMap>

     <resultMap id="popMap" class="***.bd.service.vo.BdPopVO">
        <result property="snId" column="SN_ID"/>
        <result property="ctgryId" column="CTGRY_ID"/>
        <result property="ctgryNm" column="CTGRY_NM"/>
        <result property="ctgryOrdr" column="CTGRY_ORDR"/>
        <result property="ctgryDc" column="CTGRY_DC"/>
        <result property="useYn" column="USE_YN"/>
     </resultMap>

    <!-- 메인화면 트리구성 쿼리 -->
	<select id="bdDAO.selectBdListLeft" resultClass="egovMap">
        SELECT V3.SN_ID
            , V3.LV
            , V3.CTGRY_LCLAS
            , V3.CTGRY_MLSFC
            , V3.CTGRY_SCLAS
            , CASE WHEN V3.LV = 'LV3'THEN V3.CTGRY_NM ELSE CONCAT(V3.CTGRY_NM, CTGRY_CNT) END  AS CTGRY_NM
          FROM (
           SELECT V1.SN_ID
               , V1.LV
               , V1.CTGRY_LCLAS
               , V1.CTGRY_MLSFC
               , V1.CTGRY_SCLAS
               , V1.CTGRY_NM
               , V1.LCLAS_ORDR,V1.MLSFC_ORDR,V1.SCLAS_ORDR
               , CONCAT('(',CASE WHEN V1.LV IN('LV1','LV2') THEN V2.CNT ELSE '' END,')') CTGRY_CNT
             FROM (
              SELECT CASE
                WHEN CTGRY_LCLAS IS NOT NULL AND CTGRY_MLSFC = '' AND CTGRY_SCLAS = '' THEN 'LV1'
                WHEN CTGRY_LCLAS IS NOT NULL AND CTGRY_MLSFC IS NOT NULL AND CTGRY_SCLAS = '' THEN 'LV2'
                ELSE 'LV3'
                 END LV, T1.*
                FROM CD_BD_CTGRY T1
               WHERE T1.USE_YN = 'Y'
            ) V1 LEFT OUTER JOIN (
                                  SELECT CTGRY_LCLAS
                                       , '' AS CTGRY_MLSFC
                                       , sum(case when CTGRY_MLSFC != '' then 1 else 0 end) AS CNT
                                    FROM CD_BD_CTGRY
                                   WHERE 1=1
                                     AND CTGRY_SCLAS = ''
                                     AND USE_YN = 'Y'
                                GROUP BY CTGRY_LCLAS

                                   UNION ALL

                                  SELECT CTGRY_LCLAS
                                       , CTGRY_MLSFC
                                       , sum(case when CTGRY_SCLAS != '' then 1 else 0 end) AS CNT
                                    FROM CD_BD_CTGRY
                                   WHERE 1=1
                                     AND CTGRY_MLSFC != ''
                                     AND USE_YN = 'Y'
                                GROUP BY CTGRY_LCLAS,CTGRY_MLSFC
             ) V2 ON (V1.CTGRY_LCLAS = V2.CTGRY_LCLAS AND V1.CTGRY_MLSFC =  V2.CTGRY_MLSFC)
        ) V3
           WHERE V3.CTGRY_LCLAS NOT IN (SELECT CTGRY_LCLAS FROM CD_BD_CTGRY A WHERE USE_YN= 'N' AND CTGRY_MLSFC = '' AND CTGRY_SCLAS = '')
             AND V3.CTGRY_MLSFC NOT IN (SELECT CTGRY_MLSFC FROM CD_BD_CTGRY A WHERE USE_YN= 'N'  AND CTGRY_MLSFC != '')
        ORDER BY V3.LCLAS_ORDR,V3.MLSFC_ORDR,V3.SCLAS_ORDR
    </select>

    <!-- 콤보관련 쿼리 -->
    <select id="selectBdComboList" parameterClass="bVO" resultMap="comboMap">
        <!-- 메인화면 콤보 대분류 출력 -->
        <isEqual property="statsLvl" compareValue="1">
	        SELECT CTGRY_LCLAS AS CTGRY_CD
	            , CTGRY_NM
	         FROM CD_BD_CTGRY
	        WHERE CTGRY_MLSFC = ''
	          AND CTGRY_SCLAS = ''
	          AND USE_YN = 'Y'
        </isEqual>

        <!-- 메인화면 콤보 중분류 출력 -->
        <isEqual property="statsLvl" compareValue="2">
	        SELECT CTGRY_MLSFC AS CTGRY_CD
	            , CTGRY_NM
	         FROM CD_BD_CTGRY
	        WHERE CTGRY_LCLAS = #ctgryLclas#
	          AND CTGRY_MLSFC != ''
	          AND CTGRY_SCLAS = '' AND USE_YN = 'Y'
        </isEqual>

        <!-- 메인화면 콤보 소분류 출력 -->
        <isEqual property="statsLvl" compareValue="3">
	        SELECT CTGRY_SCLAS AS CTGRY_CD
	            , CTGRY_NM
	        FROM CD_BD_CTGRY
	        WHERE CTGRY_LCLAS = #ctgryLclas#
	          AND CTGRY_MLSFC = #ctgryMlsfc#
	          AND CTGRY_SCLAS != '' AND USE_YN = 'Y'
        </isEqual>
    </select>

	<!-- 검색 쿼리 -->
	<select id="selectSearchList" parameterClass="bVO" resultClass="egovMap">
         <!-- 기본 메인화면 출력 -->
         <isEqual property="searchLevel" compareValue="99">
             SELECT * FROM
             (
              SELECT V1.COLCT_DT
                  , T2.LCLAS_NM
                  , '' AS MLSFC_NM
                  , '' AS SCLAS_NM
                  , V1.CNT AS RSCT
                  , @rnum := @rnum + 1 as rownum
                FROM (
                 SELECT T1.COLCT_DT
                     , T1.CTGRY_LCLAS
                     , SUM(RSCT) CNT
                     , @rnum := 0
                  FROM TC_BD_CTGRY_SM T1
                 WHERE COLCT_DT BETWEEN '20150101' AND '20151231'
                 GROUP BY T1.COLCT_DT, T1.CTGRY_LCLAS
               ) V1
                JOIN (
                 SELECT DISTINCT CTGRY_LCLAS
                     , LCLAS_NM
                     , LCLAS_ORDR
                  FROM VIEW_CTGRY
                ) T2 ON (T2.CTGRY_LCLAS =  V1.CTGRY_LCLAS)
                ORDER BY V1.COLCT_DT , T2.LCLAS_ORDR
                ) V2
                 WHERE V2.ROWNUM BETWEEN ((#pageIndex# - 1) * #pageUnit#) + 1  AND #pageIndex# * #pageUnit#
        </isEqual>
        <!-- 검색조건 없이 검색 -->
        <isEqual property="searchLevel" compareValue="0">
	        SELECT * FROM
	            (
	             SELECT V1.COLCT_DT
	                 , T2.LCLAS_NM
	                 , '' AS MLSFC_NM
	                 , '' AS SCLAS_NM
	                 , V1.CNT AS RSCT
	                 , @rnum := @rnum + 1 as rownum
	               FROM (
	                     SELECT T1.COLCT_DT
	                         , T1.CTGRY_LCLAS
	                         , SUM(RSCT) CNT
	                         , @rnum := 0
	                       FROM TC_BD_CTGRY_SM T1
	                      WHERE COLCT_DT BETWEEN #startDt# AND #endDt#
	                   GROUP BY T1.COLCT_DT, T1.CTGRY_LCLAS
	               ) V1
	               JOIN (
	                     SELECT DISTINCT CTGRY_LCLAS
	                         , LCLAS_NM
	                         , LCLAS_ORDR
	                       FROM VIEW_CTGRY
	               ) T2 ON (T2.CTGRY_LCLAS =  V1.CTGRY_LCLAS)
	            ORDER BY V1.COLCT_DT , T2.LCLAS_ORDR
	            ) V2

	        WHERE V2.ROWNUM BETWEEN ((#pageIndex# - 1) * #pageUnit#) + 1  AND #pageIndex# * #pageUnit#
        </isEqual>
        <!-- 대분류 검색 -->
        <isEqual property="searchLevel" compareValue="1">
		    SELECT * FROM
	            (
		         SELECT V1.COLCT_DT
		             , T2.LCLAS_NM
		             , T2.MLSFC_NM
		             , '' AS SCLAS_NM
		             , V1.CNT AS RSCT
		             , @rnum := @rnum + 1 as rownum
		           FROM (
		                 SELECT T1.COLCT_DT
		                     , T1.CTGRY_LCLAS
		                     , T1.CTGRY_MLSFC
		                     , SUM(RSCT) CNT
		                     , @rnum := 0
		                   FROM TC_BD_CTGRY_SM T1
		                  WHERE COLCT_DT BETWEEN #startDt# AND #endDt#
		                    AND T1.CTGRY_LCLAS = #ctgryLclas#
		               GROUP BY T1.COLCT_DT, T1.CTGRY_LCLAS, T1.CTGRY_MLSFC
		           ) V1
		           JOIN (
		                 SELECT DISTINCT CTGRY_LCLAS
		                     , CTGRY_MLSFC
		                     , MLSFC_NM
		                     , LCLAS_NM
		                     , MLSFC_ORDR
		                     , LCLAS_ORDR
		                   FROM VIEW_CTGRY
		           ) T2 ON (
		                        T2.CTGRY_LCLAS = V1.CTGRY_LCLAS
		                    AND T2.CTGRY_MLSFC = V1.CTGRY_MLSFC
		           ) ORDER BY V1.COLCT_DT DESC, T2.LCLAS_ORDR, T2.MLSFC_ORDR
            ) V2
            WHERE V2.ROWNUM BETWEEN ((#pageIndex# - 1) * #pageUnit#) + 1  AND #pageIndex# * #pageUnit#
        </isEqual>

        <!-- 중분류 검색 -->
        <isEqual property="searchLevel" compareValue="2">
	        SELECT * FROM
	            (
	             SELECT V1.COLCT_DT
		             , T2.LCLAS_NM
		             , T2.MLSFC_NM
		             , T2.SCLAS_NM
		             , V1.CNT as RSCT
		             , @rnum := @rnum + 1 as rownum
	               FROM (
	                     SELECT T1.COLCT_DT
	                         , T1.CTGRY_LCLAS
	                         , T1.CTGRY_MLSFC
	                         , T1.CTGRY_SCLAS
	                         , SUM(RSCT) CNT
	                         , @rnum := 0
	                       FROM TC_BD_CTGRY_SM T1
	                      WHERE COLCT_DT BETWEEN #startDt# AND #endDt#
	                        AND T1.CTGRY_LCLAS = #ctgryLclas#
	                        AND T1.CTGRY_MLSFC = #ctgryMlsfc#
	                   GROUP BY T1.COLCT_DT, T1.CTGRY_LCLAS, T1.CTGRY_MLSFC, T1.CTGRY_SCLAS
	               ) V1
	               JOIN VIEW_CTGRY T2 ON (
		                                      T2.CTGRY_LCLAS = V1.CTGRY_LCLAS
		                                  AND T2.CTGRY_MLSFC = V1.CTGRY_MLSFC
		                                  AND T2.CTGRY_SCLAS = V1.CTGRY_SCLAS
		           ) ORDER BY T2.LCLAS_ORDR, T2.MLSFC_ORDR, T2.SCLAS_ORDR
	            ) V2
	        WHERE V2.ROWNUM BETWEEN ((#pageIndex# - 1) * #pageUnit#) + 1  AND #pageIndex# * #pageUnit#
        </isEqual>

        <!-- 소분류 검색  -->
        <isEqual property="searchLevel" compareValue="3">
	        SELECT * FROM
	            (
	             SELECT V1.COLCT_DT
		             , T2.LCLAS_NM
		             , T2.MLSFC_NM
		             , T2.SCLAS_NM
		             , V1.CNT as RSCT
		             , @rnum := @rnum + 1 as rownum
	               FROM (
	                     SELECT T1.COLCT_DT
	                         , T1.CTGRY_LCLAS
	                         , T1.CTGRY_MLSFC
	                         , T1.CTGRY_SCLAS
	                         , SUM(RSCT) CNT
	                         , @rnum := 0
		                   FROM TC_BD_CTGRY_SM T1
		                  WHERE COLCT_DT BETWEEN #startDt# AND #endDt#
		                    AND T1.CTGRY_LCLAS = #ctgryLclas#
		                    AND T1.CTGRY_MLSFC = #ctgryMlsfc#
		                    AND T1.CTGRY_SCLAS = #ctgrySclas#
		               GROUP BY T1.COLCT_DT, T1.CTGRY_LCLAS, T1.CTGRY_MLSFC, T1.CTGRY_SCLAS
	            ) V1 JOIN
	            VIEW_CTGRY T2 ON (
	                                  T2.CTGRY_LCLAS = V1.CTGRY_LCLAS
	                              AND T2.CTGRY_MLSFC = V1.CTGRY_MLSFC
	                              AND T2.CTGRY_SCLAS = V1.CTGRY_SCLAS
	                       ) ORDER BY T2.LCLAS_ORDR, T2.MLSFC_ORDR, T2.SCLAS_ORDR
	            ) V2
	        WHERE V2.ROWNUM BETWEEN ((#pageIndex# - 1) * #pageUnit#) + 1  AND #pageIndex# * #pageUnit#
        </isEqual>
    </select>







    <!-- 자동분류 통계 관련 쿼리 -->
    <select id="rsList" parameterClass="bVO" resultClass="egovMap">
         <!-- 기본 화면 출력  -->
         <isEqual property="searchLevel" compareValue="0">
	             SELECT V3.CTGRY_LCLAS
				      , V3.LCLAS_NM
				      , '' AS CTGRY_MLSFC
				      , '' AS MLSFC_NM
				      , V3.CNT
				      , CAST(V3.ROWNUM AS INT) AS ROW_NUM
				  FROM (SELECT V2.CTGRY_LCLAS
				               , V2.LCLAS_NM
				               , V2.LCLAS_ORDR
				               , '' AS CTGRY_MLSFC
				               , '' AS MLSFC_NM
				               , V2.CNT
				               , @rnum := @rnum + 1 as rownum
				          FROM (SELECT T1.CTGRY_LCLAS
				                       , V1.LCLAS_NM
				                       , T1.LCLAS_ORDR
				                       , '' AS CTGRY_MLSFC
				                       , '' AS MLSFC_NM
				                       , sum(case when T1.CTGRY_MLSFC != '' then 1 else 0 end) AS CNT
				                       , @rnum := 0
				                  FROM CD_BD_CTGRY T1 JOIN (SELECT DISTINCT CTGRY_LCLAS, LCLAS_NM FROM VIEW_CTGRY) V1 ON (T1.CTGRY_LCLAS = V1.CTGRY_LCLAS)
				                 WHERE 1=1
				                   AND T1.CTGRY_SCLAS = ''
				                   AND T1.USE_YN = 'Y'
				                 GROUP BY T1.CTGRY_LCLAS, V1.LCLAS_NM, T1.LCLAS_ORDR
				                 ORDER BY T1.LCLAS_ORDR
				                ) V2
				         ) V3
				 WHERE V3.ROWNUM BETWEEN ((#pageIndex# - 1) * #pageUnit#) + 1  AND #pageIndex# * #pageUnit#
        </isEqual>
        <!-- 대분류까지 검색했을 때  -->
        <isEqual property="searchLevel" compareValue="1">
            SELECT V3.CTGRY_LCLAS
			      , V3.LCLAS_NM
			      , V3.CTGRY_MLSFC
			      , V3.MLSFC_NM
			      , V3.CNT
			      , CAST(V3.ROWNUM AS INT) AS ROW_NUM
			  FROM (SELECT V2.CTGRY_LCLAS
			               , V2.LCLAS_NM
			               , V2.LCLAS_ORDR
			               , V2.CTGRY_MLSFC
			               , V2.MLSFC_NM
			               , V2.CNT
			               , @rnum := @rnum + 1 as rownum
			          FROM (SELECT T1.CTGRY_LCLAS
			                       , V1.LCLAS_NM
			                       , T1.LCLAS_ORDR
			                       , T1.CTGRY_MLSFC
			                       , V1.MLSFC_NM
			                       , T1.MLSFC_ORDR
			                       , sum(case when T1.CTGRY_SCLAS != '' then 1 else 0 end) AS CNT
			                       , @rnum := 0
			                  FROM CD_BD_CTGRY T1 JOIN (SELECT DISTINCT CTGRY_LCLAS, LCLAS_NM, CTGRY_MLSFC, MLSFC_NM  FROM VIEW_CTGRY) V1 ON (T1.CTGRY_LCLAS = V1.CTGRY_LCLAS AND T1.CTGRY_MLSFC = V1.CTGRY_MLSFC)
			                 WHERE 1=1
			                   AND T1.CTGRY_LCLAS = #ctgryLclas#
			                   AND T1.CTGRY_MLSFC != ''
			                   AND T1.USE_YN = 'Y'
			                 GROUP BY T1.CTGRY_LCLAS, V1.LCLAS_NM, T1.LCLAS_ORDR, T1.CTGRY_MLSFC, V1.MLSFC_NM, T1.MLSFC_ORDR
			                 ORDER BY T1.LCLAS_ORDR, T1.MLSFC_ORDR
			                ) V2
			         ) V3
			 WHERE V3.ROWNUM BETWEEN ((#pageIndex# - 1) * #pageUnit#) + 1  AND #pageIndex# * #pageUnit#
        </isEqual>
        <!-- 중분류까지 검색했을 때  -->
        <isEqual property="searchLevel" compareValue="2">
             SELECT V3.CTGRY_LCLAS
			      , V3.LCLAS_NM
			      , V3.CTGRY_MLSFC
			      , V3.MLSFC_NM
			      , V3.CNT
			      , CAST(V3.ROWNUM AS INT) AS ROW_NUM
			  FROM (SELECT V2.CTGRY_LCLAS
			               , V2.LCLAS_NM
			               , V2.LCLAS_ORDR
			               , V2.CTGRY_MLSFC
			               , V2.MLSFC_NM
			               , V2.CNT
			               , @rnum := @rnum + 1 as rownum
			          FROM (SELECT T1.CTGRY_LCLAS
			                       , V1.LCLAS_NM
			                       , T1.LCLAS_ORDR
			                       , T1.CTGRY_MLSFC
			                       , V1.MLSFC_NM
			                       , T1.MLSFC_ORDR
			                       , sum(case when T1.CTGRY_SCLAS != '' then 1 else 0 end) AS CNT
			                       , @rnum := 0
			                  FROM CD_BD_CTGRY T1 JOIN (SELECT DISTINCT CTGRY_LCLAS, LCLAS_NM, CTGRY_MLSFC, MLSFC_NM  FROM VIEW_CTGRY) V1 ON (T1.CTGRY_LCLAS = V1.CTGRY_LCLAS AND T1.CTGRY_MLSFC = V1.CTGRY_MLSFC)
			                 WHERE 1=1
			                   AND T1.CTGRY_LCLAS = #ctgryLclas#
			                   AND T1.CTGRY_MLSFC = #ctgryMlsfc#
			                   AND T1.USE_YN = 'Y'
			                 GROUP BY T1.CTGRY_LCLAS, V1.LCLAS_NM, T1.LCLAS_ORDR, T1.CTGRY_MLSFC, V1.MLSFC_NM, T1.MLSFC_ORDR
			                 ORDER BY T1.LCLAS_ORDR, T1.MLSFC_ORDR
			                ) V2
			         ) V3
			 WHERE V3.ROWNUM BETWEEN ((#pageIndex# - 1) * #pageUnit#) + 1  AND #pageIndex# * #pageUnit#
        </isEqual>
    </select>



    <select id="rsSearchTotCnt" parameterClass="bVO" resultClass="int">
       <isEqual property="searchLevel" compareValue="0">
           SELECT COUNT(1) CNT
             FROM (
                   SELECT T1.CTGRY_LCLAS
                   , V1.LCLAS_NM
                   , '' AS CTGRY_MLSFC
                   , '' AS MLSFC_NM
                   , sum(case when T1.CTGRY_MLSFC != '' then 1 else 0 end) AS CNT
                 FROM CD_BD_CTGRY T1 JOIN (SELECT DISTINCT CTGRY_LCLAS, LCLAS_NM FROM VIEW_CTGRY) V1 ON (T1.CTGRY_LCLAS = V1.CTGRY_LCLAS)
                WHERE 1=1
                  AND T1.CTGRY_SCLAS = ''
                  AND T1.USE_YN = 'Y'
                GROUP BY T1.CTGRY_LCLAS, V1.LCLAS_NM
                ORDER BY T1.LCLAS_ORDR
             ) V1

        </isEqual>

        <isEqual property="searchLevel" compareValue="1">
            SELECT COUNT(1) CNT
              FROM (
		              SELECT T1.CTGRY_LCLAS
		                  , V1.LCLAS_NM
		                  , T1.CTGRY_MLSFC
		                  , V1.MLSFC_NM
		                  , sum(case when T1.CTGRY_SCLAS != '' then 1 else 0 end) AS CNT
		              FROM CD_BD_CTGRY T1 JOIN (SELECT DISTINCT CTGRY_LCLAS, LCLAS_NM, CTGRY_MLSFC, MLSFC_NM  FROM VIEW_CTGRY) V1 ON (T1.CTGRY_LCLAS = V1.CTGRY_LCLAS AND T1.CTGRY_MLSFC = V1.CTGRY_MLSFC)
		             WHERE 1=1
		              AND T1.CTGRY_LCLAS = #ctgryLclas#
		              AND T1.CTGRY_MLSFC != ''
		              AND T1.USE_YN = 'Y'
		             GROUP BY T1.CTGRY_LCLAS, V1.LCLAS_NM, T1.CTGRY_MLSFC, V1.MLSFC_NM
                    ) V1

        </isEqual>

        <!-- 중분류까지만 검색했을 때  -->
        <isEqual property="searchLevel" compareValue="2">
            SELECT COUNT(1) CNT
              FROM (
		              SELECT T1.CTGRY_LCLAS
		                  , V1.LCLAS_NM
		                  , T1.CTGRY_MLSFC
		                  , V1.MLSFC_NM
		                , sum(case when T1.CTGRY_SCLAS != '' then 1 else 0 end) AS CNT
		              FROM CD_BD_CTGRY T1 JOIN (SELECT DISTINCT CTGRY_LCLAS, LCLAS_NM, CTGRY_MLSFC, MLSFC_NM  FROM VIEW_CTGRY) V1 ON (T1.CTGRY_LCLAS = V1.CTGRY_LCLAS AND T1.CTGRY_MLSFC = V1.CTGRY_MLSFC)
		             WHERE 1=1
		              AND T1.CTGRY_LCLAS = #ctgryLclas#
		              AND T1.CTGRY_MLSFC = #ctgryMlsfc#
		              AND T1.CTGRY_MLSFC != ''
		              AND T1.USE_YN = 'Y'
		             GROUP BY T1.CTGRY_LCLAS, V1.LCLAS_NM, T1.CTGRY_MLSFC, V1.MLSFC_NM
              ) V1

        </isEqual>
    </select>


























	<select id="selectBdTotCnt" parameterClass="bVO" resultClass="int">
        SELECT COUNT(1) CNT
          FROM (
                SELECT T1.COLCT_DT
                    , T1.CTGRY_LCLAS
                    , SUM(RSCT) CNT
                  FROM TC_BD_CTGRY_SM T1
                 WHERE COLCT_DT BETWEEN '20150101' AND '20151231'
              GROUP BY T1.COLCT_DT, T1.CTGRY_LCLAS
          ) V1
          JOIN (
                SELECT DISTINCT CTGRY_LCLAS
                    , LCLAS_NM
                    , LCLAS_ORDR
                  FROM VIEW_CTGRY
          ) T2 ON (T2.CTGRY_LCLAS =  V1.CTGRY_LCLAS)
        ORDER BY V1.COLCT_DT , T2.LCLAS_ORDR
    </select>



    <select id="selectSearchBdTotCnt" parameterClass="bVO" resultClass="int">
       <isEqual property="searchLevel" compareValue="0">
	       SELECT COUNT(1) CNT
	         FROM (
	               SELECT T1.COLCT_DT
	                   , T1.CTGRY_LCLAS
	                   , SUM(RSCT) CNT
	                 FROM TC_BD_CTGRY_SM T1
	                WHERE COLCT_DT BETWEEN #startDt# AND #endDt#
	             GROUP BY T1.COLCT_DT, T1.CTGRY_LCLAS
	         ) V1
	         JOIN (
	               SELECT DISTINCT CTGRY_LCLAS
	                   , LCLAS_NM
	                   , LCLAS_ORDR
	                 FROM VIEW_CTGRY
	         ) T2 ON (T2.CTGRY_LCLAS =  V1.CTGRY_LCLAS)
	        ORDER BY V1.COLCT_DT , T2.LCLAS_ORDR
        </isEqual>

        <isEqual property="searchLevel" compareValue="1">
            SELECT COUNT(1) CNT
              FROM (
                    SELECT T1.COLCT_DT
                        , T1.CTGRY_LCLAS
                        , T1.CTGRY_MLSFC
                        , SUM(RSCT) CNT
                      FROM TC_BD_CTGRY_SM T1
                     WHERE  COLCT_DT BETWEEN #startDt# AND #endDt#
                       AND  T1.CTGRY_LCLAS = #ctgryLclas#
                  GROUP BY T1.COLCT_DT, T1.CTGRY_LCLAS, T1.CTGRY_MLSFC
             ) V1
             JOIN (
                   SELECT DISTINCT CTGRY_LCLAS
                       , CTGRY_MLSFC
                       , MLSFC_NM
                       , LCLAS_NM
                       , MLSFC_ORDR
                       , LCLAS_ORDR
                     FROM VIEW_CTGRY
             ) T2 ON (
                          T2.CTGRY_LCLAS = V1.CTGRY_LCLAS
                      AND T2.CTGRY_MLSFC = V1.CTGRY_MLSFC
               )
              ORDER BY V1.COLCT_DT , T2.LCLAS_ORDR, T2.MLSFC_ORDR
        </isEqual>

        <!-- 중분류까지만 검색했을 때  -->
        <isEqual property="searchLevel" compareValue="2">
            SELECT COUNT(1) CNT
              FROM (
                    SELECT T1.COLCT_DT
                        , T1.CTGRY_LCLAS
                        , T1.CTGRY_MLSFC
                        , T1.CTGRY_SCLAS
                        , SUM(RSCT) CNT
                      FROM TC_BD_CTGRY_SM T1
                     WHERE COLCT_DT BETWEEN #startDt# AND #endDt#
                       AND T1.CTGRY_LCLAS = #ctgryLclas#
                       AND T1.CTGRY_MLSFC = #ctgryMlsfc#
                  GROUP BY T1.COLCT_DT, T1.CTGRY_LCLAS, T1.CTGRY_MLSFC, T1.CTGRY_SCLAS
              ) V1
              JOIN VIEW_CTGRY  T2 ON (
                                          T2.CTGRY_LCLAS = V1.CTGRY_LCLAS
                                      AND T2.CTGRY_MLSFC = V1.CTGRY_MLSFC
                                      AND T2.CTGRY_SCLAS = V1.CTGRY_SCLAS
              )
             ORDER BY T2.LCLAS_ORDR, T2.MLSFC_ORDR, T2.SCLAS_ORDR
        </isEqual>

        <!-- 소분류까지 검색했을 때  -->
        <isEqual property="searchLevel" compareValue="3">
            SELECT COUNT(1) CNT
              FROM (
                    SELECT T1.COLCT_DT
                        , T1.CTGRY_LCLAS
                        , T1.CTGRY_MLSFC
                        , T1.CTGRY_SCLAS
                        , SUM(RSCT) CNT
	                  FROM TC_BD_CTGRY_SM T1
	                 WHERE COLCT_DT BETWEEN #startDt# AND #endDt#
	                   AND T1.CTGRY_LCLAS = #ctgryLclas#
	                   AND T1.CTGRY_MLSFC = #ctgryMlsfc#
	                   AND T1.CTGRY_SCLAS = #ctgrySclas#
	                 GROUP BY T1.COLCT_DT, T1.CTGRY_LCLAS, T1.CTGRY_MLSFC, T1.CTGRY_SCLAS
             ) V1
             JOIN VIEW_CTGRY T2 ON (
		                                 T2.CTGRY_LCLAS = V1.CTGRY_LCLAS
		                             AND T2.CTGRY_MLSFC = V1.CTGRY_MLSFC
		                             AND T2.CTGRY_SCLAS = V1.CTGRY_SCLAS
		     )
            ORDER BY T2.LCLAS_ORDR, T2.MLSFC_ORDR, T2.SCLAS_ORDR
        </isEqual>
    </select>

     <!-- 세부 항목 조회 기능 -->
     <select id="selectView" parameterClass="bVO" resultMap="viewMap">
	     SELECT T1.DETAIL_SN_ID
	         , T2.SN_ID
	         , T2.CTGRY_LCLAS
	         , T2.CTGRY_MLSFC
	         , T2.CTGRY_SCLAS
	         , T2.CTGRY_NM
	         , T2.CTGRY_DC
	         , T1.CTGRY_FRST_INPUT_DT
	         , T1.COLCT_TYP
	         , T1.LDADNG_LC
	         , T1.LDADNG_TY
	     FROM TC_BD_CTGRY_DETAIL T1 JOIN CD_BD_CTGRY T2 ON (T1.SN_ID = T2.SN_ID)
	    WHERE 1=1
	      AND T1.SN_ID = #snId#
    </select>

	<insert id="insertView">
		INSERT INTO CD_BD_CTGRY
			SELECT null
			    , T1.CTGRY_LCLAS
			    , T1.CTGRY_MLSFC
			    , #ctgrySclas# AS CTGRY_SCLAS
			    , #ctgryNm# AS CTGRY_NM
			    , 'Y' AS USE_YN
			    , T1.LCLAS_ORDR
			    , T1.MLSFC_ORDR
			    , (T1.SCLAS_ORDR) + 1 AS SCLAS_ORDR
			    , #ctgryDc# AS CTGRY_DC
			    , NOW()
			  FROM CD_BD_CTGRY T1
			  JOIN (
			        SELECT T1.CTGRY_LCLAS
			            , T1.CTGRY_MLSFC
			            ,MAX(SN_ID) AS SN_ID
			         FROM CD_BD_CTGRY T1
			        WHERE 1=1
			          AND T1.CTGRY_LCLAS = #ctgryLclas#
			          AND T1.CTGRY_MLSFC = #ctgryMlsfc#
			        GROUP BY T1.CTGRY_LCLAS,T1.CTGRY_MLSFC
			         ) V1 ON T1.SN_ID = V1.SN_ID
	</insert>


	<select id="selectLastInsert" resultClass="int">
        SELECT LAST_INSERT_ID()
    </select>


    <insert id="insertDetailView">
	    INSERT INTO TC_BD_CTGRY_DETAIL
	        (   SN_ID
	          , CTGRY_FRST_INPUT_DT
	          , COLCT_TYP
	          , LDADNG_LC
	          , LDADNG_TY  )
	    VALUES
	        (   #snId#
	          , date_format(now(),'%Y%m%d')
	          , #colctTyp#
	          , #ldadngLc#
	          , #ldadngTy#  )
    </insert>

    <update id="updateMaster">
	    UPDATE CD_BD_CTGRY A
	    , (
	       SELECT CTGRY_LCLAS
               , CTGRY_MLSFC
               , MAX(LCLAS_ORDR) AS LCLAS_ORDR
               , MAX(MLSFC_ORDR) AS MLSFC_ORDR
               , MAX(SCLAS_ORDR) + 1 AS SCLAS_ORDR
             FROM CD_BD_CTGRY
            WHERE 1=1
              AND CTGRY_LCLAS = #ctgryLclas#
              AND CTGRY_MLSFC = #ctgryMlsfc#
         GROUP BY CTGRY_LCLAS, CTGRY_MLSFC
            ) B
         SET A.CTGRY_LCLAS = B.CTGRY_LCLAS
           , A.CTGRY_MLSFC = B.CTGRY_MLSFC
           , A.CTGRY_SCLAS = #ctgrySclas#
           , A.CTGRY_NM = #ctgryNm#
           , A.CTGRY_DC = #ctgryDc#
           , A.LCLAS_ORDR = B.LCLAS_ORDR
           , A.MLSFC_ORDR = B.MLSFC_ORDR
           , A.SCLAS_ORDR = B.SCLAS_ORDR
        WHERE A.SN_ID = #snId# ;
    </update>

      <update id="updateDetail">
          UPDATE TC_BD_CTGRY_DETAIL SET
	          LDADNG_LC = #ldadngLc#
			, LDADNG_TY = #ldadngTy#
			, COLCT_TYP = #colctTyp#
	      WHERE 1=1
	        AND DETAIL_SN_ID = #detailsnId#
    </update>

    <update id="deleteView">
        UPDATE CD_BD_CTGRY SET USE_YN = 'N' WHERE SN_ID = #snId#
    </update>


	<!-- 팝업 기능 관련 쿼리 -->
	<select id="selectPopSearchList" parameterClass="bpVO" resultMap="popMap">

        <isEqual property="searchLevel" compareValue="0">
	        SELECT SN_ID
	            , CTGRY_LCLAS AS CTGRY_ID
	            , CTGRY_NM
	            , LCLAS_ORDR AS CTGRY_ORDR
	            , CTGRY_DC
	            , USE_YN
	         FROM CD_BD_CTGRY
	        WHERE 1=1
	          AND CTGRY_MLSFC  = ''
	          ORDER BY LCLAS_ORDR
        </isEqual>

        <!-- 중분류까지만 검색했을 때  -->
        <isEqual property="searchLevel" compareValue="1">
		    SELECT SN_ID
		        , CTGRY_MLSFC AS CTGRY_ID
		        , CTGRY_NM
		        , MLSFC_ORDR  AS CTGRY_ORDR
		        , CTGRY_DC
		        , USE_YN
		      FROM CD_BD_CTGRY
		     WHERE 1=1
		       AND CTGRY_MLSFC != ''
		       AND CTGRY_SCLAS  = ''
		       AND CTGRY_LCLAS = #ctgryLclas#
		       ORDER BY MLSFC_ORDR
        </isEqual>

        <isEqual property="searchLevel" compareValue="2">
	        SELECT SN_ID
	            , CTGRY_MLSFC AS CTGRY_ID
	            , CTGRY_NM
	            , MLSFC_ORDR  AS CTGRY_ORDR
	            , CTGRY_DC
	            , USE_YN
	          FROM CD_BD_CTGRY
	         WHERE 1=1
	           AND CTGRY_MLSFC = #ctgryMlsfc#
	           AND CTGRY_SCLAS = ''
	           AND CTGRY_LCLAS = #ctgryLclas#
        </isEqual>

    </select>


    <insert id="insertPop">

        <!-- 대분류 등록 -->
        INSERT INTO CD_BD_CTGRY
        (    CTGRY_LCLAS
            ,CTGRY_MLSFC
            ,CTGRY_SCLAS
            ,CTGRY_NM
            ,USE_YN
            ,LCLAS_ORDR
            ,MLSFC_ORDR
            ,SCLAS_ORDR
            ,CTGRY_DC   )
        VALUES
        (    #ctgryLclas#
           , #ctgryMlsfc#
           , #ctgrySclas#
           , #ctgryNm#
           , #useYn#
           , #lclasOrdr#
           , #mlsfcOrdr#
           , #sclasOrdr#
           , #ctgryDc#   )


    </insert>


    <update id="updatePop">
		UPDATE CD_BD_CTGRY
		SET
		  CTGRY_NM = #ctgryNm#
		, USE_YN = #useYn#
		, LCLAS_ORDR = #lclasOrdr#
		, MLSFC_ORDR = #mlsfcOrdr#
		, CTGRY_DC = #ctgryDc#
		WHERE SN_ID = #snId#
    </update>


    <select id="selectMaxOrdr" parameterClass="String" resultClass="int">
       SELECT MAX(LCLAS_ORDR)  FROM CD_BD_CTGRY WHERE CTGRY_LCLAS = #ctgryLclas# AND USE_YN = 'Y';
    </select>

</sqlMap>
